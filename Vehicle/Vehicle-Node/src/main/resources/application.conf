//NOTE: postgres configs should only be needed by sim driver
//postgres.hostname=ec2-34-199-6-110.compute-1.amazonaws.com
//postgres.password=spindle
//postgres.port=5432

//spindle.sim.vehicle.sensors.singlevaluesensor.names=[sensor1,sensor2]
//spindle.sim.vehicle.sensors.singlevaluesensor.values=[1,2]
//spindle.sim.vehicle.sensors.rngvaluesensor.names=[rng1,rng2]
//spindle.sim.vehicle.sensors.rngvaluesensor.maxvals=[100,1000]

scala.concurrent.context.minThreads = 100

kafka-port = 9092
zookeeper-port = 2181
local-ip = "127.0.0.1"

// Connection settings for local kafka/zk cluster
local {
  zookeeper.connection-string = ${local-ip}":2182"
  kafka.broker = ${local-ip}":9093"
}

// Connection settings for cloud (shared among all vehicles and middleware) kakfa/zk cluster
cloud {
  //root-domain="spindl.network"
  root-domain = "128.213.11.108"
  root-domain = ${?MIDDLEWARE_HOSTNAME}
  //zookeeper.connection-string="zookeeper."${cloud.root-domain}":"${zookeeper-port}
  zookeeper.connection-string = ${cloud.root-domain}":"${zookeeper-port}
  //kafka.brokers="kafka."${cloud.root-domain}":"${kafka-port}
  kafka.brokers = [${cloud.root-domain}":"${kafka-port}]
}

spindle {
  vehicle {
    // Unique ID for vehicle
    id = -1
    id = ${?VEHICLE_ID}
    test.queries = "globalSpeedAvg"
    test.queries = ${?TEST_QUERIES}
    num-iterations = 100000
    num-iterations = ${?NUM_ITERATIONS}
    iteration-length-ms = 1000
    iteration-length-ms = ${?ITERATION_LENGTH_MS}
    performance-log-path = "/tmp/spindle-perf"
    // Update this to set a vehicle's clusterhead
    clusterhead {
      kafka.broker = "127.0.0.1:9093"
      kafka.broker = ${?CLUSTERHEAD_BROKER}
      zookeeper.connection-string = "127.0.0.1:2182"
      zookeeper.connection-string = ${?CLUSTERHEAD_ZK_STRING}

    }
    kafka {
      test-topic.name = "spindle-test"
      streams {
        commit.ms = 2500
        poll.ms = 1000
        batch-size.max = 9500
        reducers.window.ms = 10000
        reducers.window.ms = ${?REDUCERS_WINDOW_MS}
      }
    }
    sensors {
      // String form of SensorType enum value
      type = "Fixed"
      // If using real sensors, specify external
      type = ${?VEHICLE_SENSOR_TYPE}

      //TODO: allow mixing of random and fixed values (select fixed if random range not specified)
      fixed.values {
        id = "1"
        lat = "0"
        lon = "0"
        color = "red"
        temperature = "27"
        humidity = "0"
        tireDistance = "5"
        groundDistance = "12"
        mph = "0"
        acceleration = "0,0,0"
      }
    }
    gossip {
      window = 2
      is-consensus = true
      sleep-mean = 40
      use-flat = false
      use-neighbors = false
    }
    neighbors {
      0 = " 33 2 3 4 37 1 40 10 16 17 18 21 23 24 25 31 30 36 "
      1 = " 0 33 2 36 37 40 10 16 24 4 30 "
      2 = " 0 1 4 37 33 40 10 16 21 24 25 36 30 31 "
      3 = " 0 33 5 38 40 9 11 14 15 17 18 19 20 23 24 26 27 29 30 31 "
      4 = " 0 33 2 36 37 1 40 10 16 24 30 "
      5 = " 3 38 9 11 14 15 17 18 19 20 23 26 27 28 29 31 "
      6 = " 8 12 35 28 "
      7 = " 32 34 39 8 12 13 22 25 "
      8 = " 32 6 38 7 39 12 17 18 19 20 22 25 28 31 "
      9 = " 3 5 38 11 14 15 17 18 19 20 23 24 26 27 28 29 31 "
      10 = " 0 33 2 36 37 1 40 16 24 4 30 "
      11 = " 3 5 38 9 14 15 17 19 20 23 26 27 28 29 "
      12 = " 32 6 39 8 7 22 "
      13 = " 32 34 39 7 22 25 "
      14 = " 3 5 38 9 11 15 17 20 23 26 27 28 29 "
      15 = " 3 5 38 9 11 14 17 20 23 26 27 29 31 "
      16 = " 0 1 2 4 37 33 40 10 17 18 19 21 24 25 31 30 36 "
      17 = " 0 33 3 5 38 40 9 11 14 15 16 8 18 19 20 23 24 25 26 28 31 "
      18 = " 0 33 3 5 38 8 9 16 17 19 20 40 23 24 25 26 28 31 "
      19 = " 33 3 5 38 8 9 11 16 17 18 20 23 24 25 26 28 31 "
      20 = " 3 5 38 8 9 11 14 15 17 18 19 23 26 28 29 31 "
      21 = " 0 33 34 36 40 2 16 24 25 "
      22 = " 32 34 7 8 39 12 13 25 "
      23 = " 0 33 3 5 38 40 9 11 14 15 17 18 19 20 24 26 27 28 29 31 "
      24 = " 0 33 2 3 36 37 1 40 9 10 16 17 18 19 4 21 23 25 30 31 "
      25 = " 32 33 34 0 7 8 39 13 16 17 18 19 21 22 24 2 31 "
      26 = " 3 5 38 9 11 14 15 17 18 19 20 23 27 29 31 "
      27 = " 3 5 9 11 14 15 23 26 29 31 "
      28 = " 38 6 8 9 11 14 17 18 19 20 23 5 31 "
      29 = " 3 5 9 11 14 15 20 23 26 27 "
      30 = " 0 33 2 3 36 37 1 40 10 16 24 4 31 "
      31 = " 0 2 3 5 8 9 15 16 17 18 19 20 23 24 25 26 27 28 30 33 38 40 "
      32 = " 34 39 8 7 12 13 22 25 "
      33 = " 0 1 2 3 36 37 19 40 10 16 17 18 30 21 23 24 25 4 31 "
      34 = " 32 7 39 13 21 22 25 "
      35 = " 6 "
      36 = " 0 1 2 4 37 33 40 10 16 21 24 30 "
      37 = " 0 33 2 4 1 40 10 16 24 36 30 "
      38 = " 3 5 8 9 11 14 15 17 18 19 20 23 26 28 31 "
      39 = " 32 34 7 8 12 13 22 25 "
      40 = " 0 33 2 3 4 37 1 10 16 17 18 21 23 24 36 30 31 "
    }
  }
}
